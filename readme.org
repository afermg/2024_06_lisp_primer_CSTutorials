#+title: Readme

* Deps
Hopefully I will be able to use guix/nix flakes for this soon enough

- Inkscape: Convert svgs to pngs programatically
- Emacs 29.3: Org for slides and getting resources
- TexLive: LaTex->pdf conversion with beamer

In this project I learned methods to use elisp as the glue for my other functions by

* Get usable images
For this presentation I needed the logos for lisps

** Set urls
#+begin_src elisp :results none
(require 'url)

(setq image-urls '(
                   ("cl" . "https://upload.wikimedia.org/wikipedia/commons/4/48/Lisp_logo.svg")
                   ("racket". "https://upload.wikimedia.org/wikipedia/commons/thumb/3/39/Lambda_lc.svg/1024px-Lambda_lc.svg.png")
                   ("scheme" . "https://upload.wikimedia.org/wikipedia/commons/thumb/3/39/Lambda_lc.svg/1024px-Lambda_lc.svg.png")
                   ("fennel" . "https://fennel-lang.org/logo.svg")
                   ("clojure" . "https://upload.wikimedia.org/wikipedia/commons/5/5d/Clojure_logo.svg")
                   ("elisp" . "https://upload.wikimedia.org/wikipedia/commons/0/08/EmacsIcon.svg")
                   ("Hy" . "https://upload.wikimedia.org/wikipedia/commons/8/87/Hy_Cuddles.png")))
#+end_src

** Download all files
#+begin_src elisp :results none
(mapcar (lambda (x) (let
 ((name (downcase (car x) ))
 (url (cdr x)))
 (url-copy-file url (format "imgs/%s.%s" name (f-ext url)) t))) image-urls)
#+end_src


** Convert svgs to png
#+begin_src elisp 
(mapcar (lambda (x)  (shell-command ( format "inkscape -h 512 imgs/%s -o imgs/%spng" x (string-remove-suffix "svg" x ) ))) (directory-files "imgs" nil (rx ".svg" eos)))
#+end_src

#+RESULTS:
| 0 | 0 | 0 | 0 |
